{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    add(state, action) {\n      state.counter = state.counter + action.payload; //payload is the name set by redux as argument\n    },\n\n    cut(state) {\n      state.counter--; //Toolkit will automatically create a new object\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","add","state","action","payload","cut","toggle","reducer"],"sources":["C:/Users/karen/OneDrive/桌面/網頁開發練習/react_starting/ReactPractice_Redux/src/store/counter-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    add(state, action) {\r\n      state.counter = state.counter + action.payload; //payload is the name set by redux as argument\r\n    },\r\n    cut(state) {\r\n      state.counter--; //Toolkit will automatically create a new object\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACRC,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACjBD,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACC,OAAO,CAAC,CAAC;IAClD,CAAC;;IACDC,GAAGA,CAACH,KAAK,EAAE;MACTA,KAAK,CAACP,OAAO,EAAE,CAAC,CAAC;IACnB,CAAC;;IACDW,MAAMA,CAACJ,KAAK,EAAE;MACZA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}