{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    add(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    cut(state) {\n      state.counter--; //Toolkit will automatically create a new object\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"ADD\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   } else if (action.type === \"CUT\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   } else if (action.type === \"TOGGLE\") {\n//     return { showCounter: !state.showCounter, counter: state.counter };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","add","state","action","amount","cut","toggle","store","reducer","counterActions","actions"],"sources":["C:/Users/karen/OneDrive/桌面/網頁開發練習/react_starting/ReactPractice_Redux/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    add(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    cut(state) {\r\n      state.counter--; //Toolkit will automatically create a new object\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer,\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"ADD\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   } else if (action.type === \"CUT\") {\r\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\r\n//   } else if (action.type === \"TOGGLE\") {\r\n//     return { showCounter: !state.showCounter, counter: state.counter };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n// const store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACjBD,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,GAAGA,CAACH,KAAK,EAAE;MACTA,KAAK,CAACN,OAAO,EAAE,CAAC,CAAC;IACnB,CAAC;;IACDU,MAAMA,CAACJ,KAAK,EAAE;MACZA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMU,KAAK,GAAGb,cAAc,CAAC;EAC3Bc,OAAO,EAAEV,YAAY,CAACU;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGX,YAAY,CAACY,OAAO;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}