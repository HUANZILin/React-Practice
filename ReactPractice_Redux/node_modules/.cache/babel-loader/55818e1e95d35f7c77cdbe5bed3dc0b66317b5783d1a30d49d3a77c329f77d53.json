{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialCounterState,\n  reducers: {\n    add(state, action) {\n      state.counter = state.counter + action.payload; //payload is the name set by redux as argument\n    },\n\n    cut(state) {\n      state.counter--; //Toolkit will automatically create a new object\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"ADD\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   } else if (action.type === \"CUT\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   } else if (action.type === \"TOGGLE\") {\n//     return { showCounter: !state.showCounter, counter: state.counter };\n//   }\n\n//   return state;\n// };\n\n// const store = createStore(counterReducer);\n\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","reducers","add","state","action","payload","cut","toggle","initialAuthState","isAuthenticated","authSlice","initialState","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/karen/OneDrive/桌面/網頁開發練習/react_starting/ReactPractice_Redux/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialCounterState,\r\n  reducers: {\r\n    add(state, action) {\r\n      state.counter = state.counter + action.payload; //payload is the name set by redux as argument\r\n    },\r\n    cut(state) {\r\n      state.counter--; //Toolkit will automatically create a new object\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"ADD\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   } else if (action.type === \"CUT\") {\r\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\r\n//   } else if (action.type === \"TOGGLE\") {\r\n//     return { showCounter: !state.showCounter, counter: state.counter };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\n// const store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,mBAAmB;EACnBK,QAAQ,EAAE;IACRC,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACjBD,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO,CAAC,CAAC;IAClD,CAAC;;IACDC,GAAGA,CAACH,KAAK,EAAE;MACTA,KAAK,CAACN,OAAO,EAAE,CAAC,CAAC;IACnB,CAAC;;IACDU,MAAMA,CAACJ,KAAK,EAAE;MACZA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMU,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC5BM,IAAI,EAAE,gBAAgB;EACtBW,YAAY,EAAEH,gBAAgB;EAC9BP,QAAQ,EAAE;IACRW,KAAKA,CAACT,KAAK,EAAE;MACXA,KAAK,CAACM,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDI,MAAMA,CAACV,KAAK,EAAE;MACZA,KAAK,CAACM,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,MAAMK,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAE;IAAElB,OAAO,EAAEE,YAAY,CAACgB,OAAO;IAAEC,IAAI,EAAEN,SAAS,CAACK;EAAQ;AACpE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGlB,YAAY,CAACmB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGT,SAAS,CAACQ,OAAO;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}