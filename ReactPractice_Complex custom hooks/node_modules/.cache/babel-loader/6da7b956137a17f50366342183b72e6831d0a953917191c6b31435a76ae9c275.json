{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useHttps = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, [applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttps, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttps;","map":{"version":3,"names":["useState","useCallback","useHttps","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Users/karen/OneDrive/桌面/網頁開發練習/react_starting/ReactPractice_Complex custom hooks/src/hooks/use-https.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nconst useHttps = (applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(\r\n    async (requestConfig) => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(requestConfig.url, {\r\n          method: requestConfig.method ? requestConfig.method : \"GET\",\r\n          headers: requestConfig.headers ? requestConfig.headers : {},\r\n          body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Request failed!\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        applyData(data);\r\n      } catch (err) {\r\n        setError(err.message || \"Something went wrong!\");\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    [applyData]\r\n  );\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttps;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,QAAQ,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,WAAW,GAAGR,WAAW,CAC7B,MAAOS,aAAa,IAAK;IACvBJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,aAAa,CAACG,GAAG,EAAE;QAC9CC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEL,aAAa,CAACK,OAAO,GAAGL,aAAa,CAACK,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEN,aAAa,CAACM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,aAAa,CAACM,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCnB,SAAS,CAACkB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,CAACH,SAAS,CACZ,CAAC;EAED,OAAO;IACLE,SAAS;IACTE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CAlCIF,QAAQ;AAoCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}