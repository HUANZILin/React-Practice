{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\\\u684C\\u9762\\\\\\u7DB2\\u9801\\u958B\\u767C\\u7DF4\\u7FD2\\\\react_starting\\\\ReactPractice_Advanced React Router\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment, Suspense } from \"react\";\nimport { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        children: [/*#__PURE__*/_jsxDEV(EventItem, {\n          event: data.event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EventsList, {\n          event: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nconst loadEvent = async id => {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch this event details.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n};\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n};\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n};\nexport const action = async ({\n  params,\n  request\n}) => {\n  const response = await fetch(\"http://localhost:8080/events/\" + params.eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete this event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Fragment","Suspense","useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","EventDetailPage","_s","event","events","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/桌面/網頁開發練習/react_starting/ReactPractice_Advanced React Router/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Fragment, Suspense } from \"react\";\r\nimport {\r\n  useRouteLoaderData,\r\n  json,\r\n  redirect,\r\n  defer,\r\n  Await,\r\n} from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nconst EventDetailPage = () => {\r\n  const { event, events } = useRouteLoaderData(\"event-detail\");\r\n\r\n  return (\r\n    <Fragment>\r\n      <Suspense>\r\n        <Await>\r\n          <EventItem event={data.event} />\r\n          <EventsList event={events} />\r\n        </Await>\r\n      </Suspense>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nconst loadEvent = async (id) => {\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch this event details.\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.event;\r\n  }\r\n};\r\n\r\nconst loadEvents = async () => {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch events.\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n};\r\n\r\nexport const loader = async ({ request, params }) => {\r\n  const id = params.eventId;\r\n\r\n  return defer({\r\n    event: loadEvent(id),\r\n    events: loadEvents(),\r\n  });\r\n};\r\n\r\nexport const action = async ({ params, request }) => {\r\n  const response = await fetch(\r\n    \"http://localhost:8080/events/\" + params.eventId,\r\n    {\r\n      method: request.method,\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not delete this event\" }, { status: 500 });\r\n  }\r\n\r\n  return redirect(\"/events\");\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}